{"ast":null,"code":"var _jsxFileName = \"/Users/killianvincent/Desktop/Cours/Framework-JS/React/Pratique/TP-React-KillianVINCENT/portfolio-final/src/contexts/ProjectsContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsContext = /*#__PURE__*/createContext();\nexport const ProjectsProvider = ({\n  children\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:3000/api/projects');\n        if (!response.ok) {\n          throw new Error('Failed to fetch projects');\n        }\n        const data = await response.json();\n        setProjects(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n  const addProject = async newProject => {\n    try {\n      const response = await fetch('http://127.0.0.1:3000/api/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(newProject)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add project');\n      }\n      const addedProject = await response.json();\n      setProjects([...projects, addedProject]);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  const deleteProject = async projectId => {\n    try {\n      const response = await fetch(`http://127.0.0.1:3000/api/projects/${projectId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete project');\n      }\n      setProjects(projects.filter(project => project.id !== projectId));\n    } catch (error) {\n      setError(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectsContext.Provider, {\n    value: {\n      projects,\n      loading,\n      error,\n      addProject,\n      deleteProject\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectsProvider, \"D01YWZOqXtPgB8Jf7trLNzFYnAg=\");\n_c = ProjectsProvider;\nexport { ProjectsContext };\nvar _c;\n$RefreshReg$(_c, \"ProjectsProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ProjectsContext","ProjectsProvider","children","_s","projects","setProjects","loading","setLoading","error","setError","fetchProjects","response","fetch","ok","Error","data","json","addProject","newProject","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","addedProject","deleteProject","projectId","filter","project","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/killianvincent/Desktop/Cours/Framework-JS/React/Pratique/TP-React-KillianVINCENT/portfolio-final/src/contexts/ProjectsContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst ProjectsContext = createContext();\n\nexport const ProjectsProvider = ({ children }) => {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:3000/api/projects');\n        if (!response.ok) {\n          throw new Error('Failed to fetch projects');\n        }\n        const data = await response.json();\n        setProjects(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProjects();\n  }, []);\n\n  const addProject = async (newProject) => {\n    try {\n      const response = await fetch('http://127.0.0.1:3000/api/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(newProject),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to add project');\n      }\n\n      const addedProject = await response.json();\n      setProjects([...projects, addedProject]);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const deleteProject = async (projectId) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:3000/api/projects/${projectId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete project');\n      }\n\n      setProjects(projects.filter((project) => project.id !== projectId));\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return (\n    <ProjectsContext.Provider value={{ projects, loading, error, addProject, deleteProject }}>\n      {children}\n    </ProjectsContext.Provider>\n  );\n};\n\nexport { ProjectsContext };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}